name: deploy-apis-to-testing

on:
  push:
    branches: master
jobs:
  check:
    #if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    name: check changed microservice(s)
    outputs:
      run_auth_service: ${{ steps.check_files.outputs.run_python_app }} 
      run_device_registry: ${{ steps.check_files.outputs.run_node_app }} 
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

        #### all microservices ######
      - name: check modified microserivce
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD
          
          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          
          echo "::set-output name=run_python_app::false"
          echo "::set-output name=run_node_app::false"  

          while IFS= read -r file
          do
            echo $file
            if [[ $file == devops/src/python-app/* ]]; then
              echo "::set-output name=run_python_app::true"
            fi

            if [[ $file == devops/src/node-app/* ]]; then
              echo "::set-output name=run_node_app::true"
            fi
          done < files.txt


  ### python app ###
  python-app:
    name: build-push-deploy-python-app
    needs: check
    if: needs.check.outputs.run_python_app == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.GCR_CONFIG }}

      - name: Login to K8S
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }}
      
      - name: Build and Push Docker Image
        run: |
          cd devops/src/python-app/
          docker build --tag ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/airqo-test-python-api:latest .
          docker push ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/airqo-test-python-api:latest
      - name: Deploy to K8S
        run: |
          cd devops/k8s/
          kubectl apply -f test-python-app.yaml
          kubectl rollout restart deployment/airqo-test-python-api -n testing

  #### node app ######
  node-app:
    name: build-push-deploy-node-app
    needs: check
    if: needs.check.outputs.run_node_app == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.GCR_CONFIG }}

      - name: Login to K8S
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }}
      
      - name: Build and Push Docker Image
        run: |
          cd devops/src/node-app
          docker build --tag ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/airqo-test-node-api:latest .
          docker push ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/airqo-test-node-api:latest
      - name: Deploy to K8S
        run: |
          cd devops/k8s/
          kubectl apply -f test-node-app.yaml
          kubectl rollout restart deployment/airqo-test-node-api -n testing